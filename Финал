from telethon import events

from .. import loader, utils


class FinalistsMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–æ–≤ –≤ –∏–≥—Ä–µ "–ú–∞—Ñ–∏—è"."""

    def __init__(self):
        self.is_auto_enabled = False  # –§–ª–∞–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–æ–≤
        self.finalists_list = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–æ–≤

    async def find_finalists(self, event):
        if '–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!' in event.raw_text:
            async for message in event.client.iter_messages(event.input_chat, limit=10, reverse=True):
                if message.out:
                    continue
                if '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:' in message.raw_text:
                    return message.raw_text.strip()
        return None

    @loader.unrestricted
    @loader.ratelimit
    async def finalistscmd(self, message):
        """
        –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–æ–≤.
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ".finalists on" –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏ ".finalists off" –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è.
        """
        args = utils.get_args(message)
        if args and args[0].lower() == 'on':
            self.is_auto_enabled = True
            await message.edit('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–æ–≤ –≤–∫–ª—é—á–µ–Ω–∞.')
        elif args and args[0].lower() == 'off':
            self.is_auto_enabled = False
            await message.edit('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω–∞.')
        else:
            await message.edit('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "on" –∏–ª–∏ "off".')

    @events.register(events.NewMessage)
    async def handle_message(self, event):
        if self.is_auto_enabled:
            if 'üåù –£—Ç—Ä–æ:' in event.raw_text or 'üåô –ù–∞—Å—Ç—É–ø–∞–µ—Ç –Ω–æ—á—å ‚ùÑÔ∏è' in event.raw_text:
                async for message in event.client.iter_messages(event.input_chat, limit=5, reverse=True):
                    if message.out:
                        continue
                    if '–ñ–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏:' in message.raw_text:
                        players_list = message.raw_text.split('–ñ–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏:', 1)[1].strip()
                        if '–í—Å–µ–≥–æ:' in players_list:
                            if int(players_list.split('–í—Å–µ–≥–æ:')[1].split('\n')[0].strip()) >= 5:
                                self.finalists_list = players_list
                                break

            elif '–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!' in event.raw_text and self.finalists_list:
                winners_message = await self.find_finalists(event)
                if winners_message:
                    self.finalists_list += '\n\n' + winners_message

            if self.finalists_list:
                await event.reply(f'–§–∏–Ω–∞–ª–∏—Å—Ç—ã:\n{self.finalists_list}')
